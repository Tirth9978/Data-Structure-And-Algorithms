--> Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

--> COde : 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if (head == NULL){
            return NULL;
        }
        // while(head -> val == val && head != NULL){
        //     head = head -> next;
        // }
        ListNode * temp = head ;
        
        while(head -> next != NULL && head != NULL){
            if (head ->next->val == val ){
                head -> next = head->next -> next;
            }
            else {  
                head = head -> next ;
            }
            
        }
        while(temp != NULL && temp->val == val){
            temp = temp->next;
        }
        return temp;
    }
};
