--> You are given an integer mountain array arr of length n where the values increase to a peak element and then decrease.
    Return the index of the peak element.
    Your task is to solve it in O(log(n)) time complexity.      

--> Ex 1:   Input: arr = [0,1,0]
            Output: 1 
--> Ex 2:   Input: arr = [0,10,5,2]
            Output: 1

-->Code : 
    class Solution {
    public:
        int peakIndexInMountainArray(vector<int>& arr) {
            int end = arr.size() -1 ;
            int start = 0;
            int mid = start + (end - start) / 2;
            int ans = 0;
            while (start <= end){
                
                if (arr[mid] > arr[mid+1]){
                    end = mid -1;
                }
                else if (arr[mid] < arr[mid +1]){
                    start = mid +1;
                }
                mid = start + (end - start) / 2;
                ans = mid;
            }
            return ans;
        }
    };
