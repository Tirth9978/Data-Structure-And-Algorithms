--> Given an integer array nums, find the subarray with the largest sum, and return its sum.

--> Ex 1 : 
    Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
    Output: 6
    Explanation: The subarray [4,-1,2,1] has the largest sum 6.

--> Ex 2 :
    Input: nums = [1]
    Output: 1
    Explanation: The subarray [1] has the largest sum 1.

--> Ex 3 :
    Input: nums = [5,4,-1,7,8]
    Output: 23
    Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.

--> Code : 
    class Solution {
    public:
        int maxSubArray(vector<int>& nums) {
            int max_sum = INT_MIN;
            int sum = 0;
            for (int i=0;i<nums.size();i++){
                sum+= nums[i];
                max_sum = max(sum,max_sum);
                if (sum<0){
                    sum = 0;
                }
    
            }return max_sum;
        }
    };
