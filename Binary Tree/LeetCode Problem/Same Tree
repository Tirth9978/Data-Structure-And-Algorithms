--> Given the roots of two binary trees p and q, write a function to check if they are the same or not.
    Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

--> Code 1 : 
    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
     *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
     *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
     * right(right) {}
     * };
     */
    class Solution {
    public:
        bool isSameTree(TreeNode* p, TreeNode* q) {
            if (p == NULL && q == NULL)
                return 1;
            if (p != NULL && q == NULL)
                return 0;
            if (p == NULL && q != NULL)
                return 0;
            if (p->val != q->val)
                return 0;
    
            bool left = isSameTree(p->left, q->left);
            bool right = isSameTree(p->right, q->right);
            bool data = p->val == q->val;
            if (left && right && data)
                return 1;
            return 0;
        }
    };
